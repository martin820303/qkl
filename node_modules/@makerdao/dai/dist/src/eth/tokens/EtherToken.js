"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _applyDecoratedDescriptor2 = _interopRequireDefault(require("@babel/runtime/helpers/applyDecoratedDescriptor"));

var _Currency = require("../Currency");

var _tracksTransactions = _interopRequireDefault(require("../../utils/tracksTransactions"));

var _class;

var EtherToken = (_class = /*#__PURE__*/function () {
  function EtherToken(web3Service, gasService, transactionManager) {
    (0, _classCallCheck2["default"])(this, EtherToken);
    this._web3 = web3Service;
    this._gasService = gasService;
    this._transactionManager = transactionManager;
  } // eslint-disable-next-line


  (0, _createClass2["default"])(EtherToken, [{
    key: "allowance",
    value: function allowance(tokenOwner, spender) {
      return Promise.resolve(Number.MAX_SAFE_INTEGER);
    }
  }, {
    key: "balance",
    value: function balance() {
      return this.balanceOf(this._web3.currentAddress());
    }
  }, {
    key: "balanceOf",
    value: function () {
      var _balanceOf = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(owner) {
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.t0 = _Currency.ETH;
                _context.next = 3;
                return this._web3.getBalance(owner);

              case 3:
                _context.t1 = _context.sent;
                return _context.abrupt("return", _context.t0.wei.call(_context.t0, _context.t1));

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function balanceOf(_x) {
        return _balanceOf.apply(this, arguments);
      }

      return balanceOf;
    }() // eslint-disable-next-line

  }, {
    key: "approve",
    value: function approve(spender, value) {
      return Promise.resolve(true);
    } // eslint-disable-next-line

  }, {
    key: "approveUnlimited",
    value: function approveUnlimited(spender) {
      return Promise.resolve(true);
    }
  }, {
    key: "transfer",
    value: function () {
      var _transfer = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(toAddress, amount, options) {
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", this.transferFrom(this._web3.currentAddress(), toAddress, amount, options));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function transfer(_x2, _x3, _x4) {
        return _transfer.apply(this, arguments);
      }

      return transfer;
    }()
  }, {
    key: "transferFrom",
    value: function () {
      var _transferFrom = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(fromAddress, toAddress, amount, _ref) {
        var _ref$unit, unit, promise;

        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _ref$unit = _ref.unit, unit = _ref$unit === void 0 ? _Currency.ETH : _ref$unit, promise = _ref.promise;
                return _context3.abrupt("return", this._transactionManager.sendTransaction({
                  from: fromAddress,
                  to: toAddress,
                  value: (0, _Currency.getCurrency)(amount, unit).toFixed('wei')
                }, {
                  metadata: {
                    action: {
                      name: 'transfer',
                      from: fromAddress,
                      to: toAddress,
                      amount: (0, _Currency.getCurrency)(amount, unit)
                    }
                  },
                  promise: promise
                }));

              case 2:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function transferFrom(_x5, _x6, _x7, _x8) {
        return _transferFrom.apply(this, arguments);
      }

      return transferFrom;
    }()
  }]);
  return EtherToken;
}(), ((0, _applyDecoratedDescriptor2["default"])(_class.prototype, "transfer", [_tracksTransactions["default"]], Object.getOwnPropertyDescriptor(_class.prototype, "transfer"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "transferFrom", [_tracksTransactions["default"]], Object.getOwnPropertyDescriptor(_class.prototype, "transferFrom"), _class.prototype)), _class);
exports["default"] = EtherToken;