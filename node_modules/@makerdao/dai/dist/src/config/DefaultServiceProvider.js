"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.resolver = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _servicesCore = require("@makerdao/services-core");

var _AccountsService = _interopRequireDefault(require("../eth/AccountsService"));

var _AllowanceService = _interopRequireDefault(require("../eth/AllowanceService"));

var _CacheService = _interopRequireDefault(require("../utils/CacheService"));

var _DSProxyService = _interopRequireDefault(require("../eth/DSProxyService"));

var _EthereumTokenService = _interopRequireDefault(require("../eth/EthereumTokenService"));

var _EventService = _interopRequireDefault(require("../utils/events/EventService"));

var _GasService = _interopRequireDefault(require("../eth/GasService"));

var _MulticallService = _interopRequireDefault(require("../eth/MulticallService"));

var _NonceService = _interopRequireDefault(require("../eth/NonceService"));

var _NullEventService = _interopRequireDefault(require("../utils/events/NullEventService"));

var _SmartContractService = _interopRequireDefault(require("../eth/SmartContractService"));

var _TimerService = _interopRequireDefault(require("../utils/TimerService"));

var _TransactionManager = _interopRequireDefault(require("../eth/TransactionManager"));

var _Web3Service = _interopRequireDefault(require("../eth/Web3Service"));

var _index = require("./index");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var resolver = {
  defaults: {
    accounts: 'AccountsService',
    allowance: 'AllowanceService',
    cache: 'CacheService',
    event: 'EventService',
    gas: 'GasService',
    multicall: 'MulticallService',
    nonce: 'NonceService',
    proxy: 'DSProxyService',
    smartContract: 'SmartContractService',
    timer: 'TimerService',
    token: 'EthereumTokenService',
    transactionManager: 'TransactionManager',
    web3: 'Web3Service'
  },
  disabled: {
    event: 'NullEventService'
  }
};
exports.resolver = resolver;

var DefaultServiceProvider = /*#__PURE__*/function (_ServiceProvider) {
  (0, _inherits2["default"])(DefaultServiceProvider, _ServiceProvider);

  var _super = _createSuper(DefaultServiceProvider);

  function DefaultServiceProvider() {
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    (0, _classCallCheck2["default"])(this, DefaultServiceProvider);

    if (config.web3) {
      config = _objectSpread(_objectSpread({}, config), {}, {
        accounts: _objectSpread(_objectSpread({}, config.accounts), {}, {
          web3: (0, _index.getSettings)(config.web3)
        })
      });
    }

    return _super.call(this, config, _objectSpread({
      services: {
        AccountsService: _AccountsService["default"],
        AllowanceService: _AllowanceService["default"],
        CacheService: _CacheService["default"],
        DSProxyService: _DSProxyService["default"],
        EthereumTokenService: _EthereumTokenService["default"],
        EventService: _EventService["default"],
        GasService: _GasService["default"],
        MulticallService: _MulticallService["default"],
        NonceService: _NonceService["default"],
        NullEventService: _NullEventService["default"],
        SmartContractService: _SmartContractService["default"],
        TimerService: _TimerService["default"],
        TransactionManager: _TransactionManager["default"],
        Web3Service: _Web3Service["default"]
      }
    }, resolver));
  }

  return DefaultServiceProvider;
}(_servicesCore.ServiceProvider);

exports["default"] = DefaultServiceProvider;