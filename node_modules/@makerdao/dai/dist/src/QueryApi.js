"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getQueryResponse = getQueryResponse;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _assert = _interopRequireDefault(require("assert"));

var _isomorphicFetch = _interopRequireDefault(require("isomorphic-fetch"));

function getQueryResponse(_x, _x2, _x3) {
  return _getQueryResponse.apply(this, arguments);
}

function _getQueryResponse() {
  _getQueryResponse = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(serverUrl, query, variables) {
    var resp, _yield$resp$json, data;

    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return (0, _isomorphicFetch["default"])(serverUrl, {
              method: 'POST',
              headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                query: query,
                variables: variables
              })
            });

          case 2:
            resp = _context.sent;
            _context.next = 5;
            return resp.json();

          case 5:
            _yield$resp$json = _context.sent;
            data = _yield$resp$json.data;
            (0, _assert["default"])(data, "error fetching data from ".concat(serverUrl));
            return _context.abrupt("return", data);

          case 9:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _getQueryResponse.apply(this, arguments);
}