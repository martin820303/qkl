"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.contractAddressesInfo = contractAddressesInfo;
exports.contractInfo = contractInfo;
exports["default"] = exports.TESTNET_ID = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _tokens = _interopRequireDefault(require("./tokens"));

var _contracts = _interopRequireDefault(require("./contracts"));

var abis = _interopRequireWildcard(require("./abis"));

var _kovan = _interopRequireDefault(require("./addresses/kovan.json"));

var _mainnet = _interopRequireDefault(require("./addresses/mainnet.json"));

var _testnet = _interopRequireDefault(require("./addresses/testnet.json"));

var addressMapping = {
  mainnet: _mainnet["default"],
  kovan: _kovan["default"],
  testnet: _testnet["default"]
};

function contractAddressesInfo(addresses) {
  var _ref;

  return _ref = {}, (0, _defineProperty2["default"])(_ref, _tokens["default"].SAI, [{
    version: 1,
    address: addresses.SAI,
    abi: abis.general.erc20,
    decimals: 18
  }]), (0, _defineProperty2["default"])(_ref, _tokens["default"].WETH, [{
    version: 1,
    address: addresses.SAI_GEM,
    abi: abis.dappHub.dsEthToken,
    decimals: 18
  }]), (0, _defineProperty2["default"])(_ref, _tokens["default"].PETH, [{
    version: 1,
    address: addresses.SAI_SKR,
    abi: abis.general.erc20,
    decimals: 18
  }]), (0, _defineProperty2["default"])(_ref, _tokens["default"].MKR, [{
    version: 1,
    address: addresses.GOV_OLD || '0x0000000000000000000000000000000000000001',
    abi: abis.general.erc20,
    decimals: 18
  }, {
    version: 2,
    address: addresses.SAI_GOV,
    abi: abis.general.erc20,
    decimals: 18
  }]), (0, _defineProperty2["default"])(_ref, _contracts["default"].SAI_PIP, [{
    version: 1,
    address: addresses.SAI_PIP,
    abi: abis.dappHub.dsValue
  }]), (0, _defineProperty2["default"])(_ref, _contracts["default"].SAI_TUB, [{
    version: 1,
    address: addresses.SAI_TUB,
    abi: abis.daiV1.tub
  }]), (0, _defineProperty2["default"])(_ref, _contracts["default"].MAKER_OTC, [{
    version: 1,
    address: addresses.MAKER_OTC,
    abi: abis.exchangesV1.makerOtc
  }]), (0, _defineProperty2["default"])(_ref, _contracts["default"].MULTICALL, [{
    version: 1,
    address: addresses.MULTICALL,
    abi: abis.multicall
  }]), (0, _defineProperty2["default"])(_ref, _contracts["default"].SAI_CAGEFREE, [{
    version: 1,
    address: addresses.SAI_CAGEFREE,
    abi: abis.cageFree
  }]), (0, _defineProperty2["default"])(_ref, _contracts["default"].SAI_PROXY, [{
    version: 1,
    address: addresses.SAI_PROXY,
    abi: abis.proxies.saiProxy
  }]), (0, _defineProperty2["default"])(_ref, _contracts["default"].OASIS_PROXY, [{
    version: 1,
    address: addresses.OASIS_PROXY,
    abi: abis.proxies.oasisProxy
  }]), (0, _defineProperty2["default"])(_ref, _contracts["default"].DS_PROXY_FACTORY, [{
    version: 1,
    address: addresses.DS_PROXY_FACTORY,
    abi: abis.proxies.dsProxyFactory
  }]), (0, _defineProperty2["default"])(_ref, _contracts["default"].DS_PROXY, [{
    version: 1,
    abi: abis.dappHub.dsProxy
  }]), (0, _defineProperty2["default"])(_ref, _contracts["default"].PROXY_REGISTRY, [{
    version: 1,
    address: addresses.PROXY_REGISTRY,
    abi: abis.proxies.proxyRegistry
  }]), _ref;
}

function contractInfo(network) {
  var addresses = addressMapping[network];
  return contractAddressesInfo(addresses);
}

var TESTNET_ID = 999;
exports.TESTNET_ID = TESTNET_ID;
var _default = [{
  name: 'mainnet',
  networkId: 1,
  contracts: contractInfo('mainnet')
}, {
  name: 'morden',
  networkId: 2
}, {
  name: 'ropsten',
  networkId: 3
}, {
  name: 'rinkeby',
  networkId: 4
}, {
  name: 'goerli',
  networkId: 5
}, {
  name: 'kovan',
  networkId: 42,
  contracts: contractInfo('kovan')
}, {
  name: 'test',
  networkId: 1337,
  contracts: contractInfo('testnet')
}, {
  name: 'test',
  networkId: TESTNET_ID,
  contracts: contractInfo('testnet')
}];
exports["default"] = _default;